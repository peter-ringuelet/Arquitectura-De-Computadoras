ORG 1000H
NUM DB 0
MSJ DB "INGRESE UN NUMERO DE UN SOLO DIGITO: "
CERO DB "CERO"
UNO DB "UNO"
DOS DB "DOS"
TRES DB "TRES"
CUATRO DB "CUATRO"
CINCO DB "CINCO"
SEIS DB "SEIS"
SIETE DB "SIETE"
OCHO DB "OCHO"
NUEVE DB "NUEVE"
ERROR DB "NO ES UN NUMERO"
FIN DB ?

ORG 3000H
ES_NUM: CMP BYTE PTR [BX], 0H 
JS NO_NUM
CMP BYTE PTR [BX], 9H
JZ SI_NUM
JNS NO_NUM
JMP SI_NUM
NO_NUM: MOV CL, 00H
JMP FINNN
SI_NUM: MOV CL, 0FFH
FINNN: RET


PRINT_CERO: MOV BX, OFFSET CERO
MOV AL, OFFSET UNO - OFFSET CERO
INT 7
RET

PRINT_UNO: MOV BX, OFFSET UNO
MOV AL, OFFSET DOS - OFFSET UNO
INT 7
RET

PRINT_DOS: MOV BX, OFFSET DOS
MOV AL, OFFSET TRES - OFFSET DOS
INT 7 
RET

PRINT_TRES: MOV BX, OFFSET TRES
MOV AL, OFFSET CUATRO - OFFSET TRES
INT 7 
RET

PRINT_CUATRO: MOV BX, OFFSET CUATRO
MOV AL, OFFSET CINCO - OFFSET CUATRO
INT 7 
RET

PRINT_CINCO: MOV BX, OFFSET CINCO
MOV AL, OFFSET SEIS - OFFSET CINCO
INT 7 
RET

PRINT_SEIS: MOV BX, OFFSET SEIS
MOV AL, OFFSET SIETE - OFFSET SEIS
INT 7 
RET

PRINT_SIETE: MOV BX, OFFSET SIETE
MOV AL, OFFSET OCHO - OFFSET SIETE
INT 7 
RET

PRINT_OCHO: MOV BX, OFFSET OCHO
MOV AL, OFFSET NUEVE - OFFSET OCHO
INT 7 
RET

PRINT_NUEVE: MOV BX, OFFSET NUEVE
MOV AL, OFFSET ERROR - OFFSET NUEVE
INT 7 
RET



ORG 2000H
MOV CH,0
LOOP: MOV BX, OFFSET MSJ
MOV AL, OFFSET CERO-OFFSET MSJ
INT 7
MOV BX, OFFSET NUM
INT 6
SUB NUM, 30H
CALL ES_NUM
CMP CL, 0FFH
JZ PRINT_NUMERO
MOV BX, OFFSET ERROR
MOV AL, OFFSET FIN - OFFSET ERROR
INT 7
JMP FINN
PRINT_NUMERO: MOV DL, NUM
CMP DL,0
JNZ SEGUIR
ADD CH,1
CALL PRINT_CERO
SEGUIR: CMP DL,1
JNZ RDOS
CALL PRINT_UNO
RDOS: CMP DL,2
JNZ RTRES
CALL PRINT_DOS
RTRES: CMP DL,3
JNZ RCUATRO
CALL PRINT_TRES
RCUATRO: CMP DL,4
JNZ RCINCO
CALL PRINT_CUATRO
RCINCO: CMP DL,5
JNZ RSEIS
CALL PRINT_CINCO
RSEIS: CMP DL,6
JNZ RSIETE
CALL PRINT_SEIS
RSIETE: CMP DL,7
JNZ ROCHO
CALL PRINT_SIETE
ROCHO: CMP DL,8
JNZ RNUEVE
CALL PRINT_OCHO
RNUEVE: CMP DL,9
JNZ PRE_LOOP
CALL PRINT_NUEVE
PRE_LOOP: CMP CH, 2
JNZ LOOP
FINN: INT 0
END